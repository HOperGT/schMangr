import json
import sqlite3
import time

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton 
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def role_selection_menu() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="üë©‚Äçüè´ –£—á–∏—Ç–µ–ª—å", callback_data="role_teacher")
    builder.button(text="üë¶ –£—á–µ–Ω–∏–∫", callback_data="role_student")
    builder.button(text="–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª –±–æ—Ç–∞", url="https://t.me//NewsSchoolManager")
    builder.button(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/helpBotSchoolManager_bot")
    builder.adjust(2)
    return builder.as_markup()


def back_role() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –í—ã–π—Ç–∏", callback_data="exit_to_role"))
    builder.button(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/helpBotSchoolManager_bot")
    builder.adjust(1)
    return builder.as_markup()

def back_role_2() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üîô –í—ã–π—Ç–∏", callback_data="exit_to_role"))
    builder.add(InlineKeyboardButton(text="üîô –°–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å", callback_data="change_classssss"))
    builder.button(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/helpBotSchoolManager_bot")
    builder.adjust(1)
    return builder.as_markup()

def back_3() -> InlineKeyboardMarkup:
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ classes.db –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
    conn_classes = sqlite3.connect("instance/classes.db", isolation_level=None)
    cursor_classes = conn_classes.cursor()
    cursor_classes.execute("SELECT id, class_name FROM class_schedule")
    class_buttons = cursor_classes.fetchall()
    conn_classes.close()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–ª–∞—Å—Å–æ–≤
    for class_id, class_name in class_buttons:
        builder.button(
            text=class_name,  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            callback_data=f"select_class_{class_name}"  # –î–∞–Ω–Ω—ã–µ –∫–æ–ª–±—ç–∫–∞
        )

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
    builder.button(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="exit_to_role")
    builder.add(InlineKeyboardButton(text="–ù–µ –º–µ–Ω—è—Ç—å –∫–ª–∞—Å—Å.", callback_data="role_student"))
    builder.adjust(1)  # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª–∏—Å—å –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ

    return builder.as_markup()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã


def student_menu() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule"))
    builder.add(InlineKeyboardButton(text="üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="events"))
    builder.add(InlineKeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data="news"))
    builder.add(InlineKeyboardButton(text="üîô –í—ã–π—Ç–∏", callback_data="exit_to_role"))
    builder.button(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/helpBotSchoolManager_bot")
    builder.adjust(2)
    return builder.as_markup()


def generate_class_menu() -> InlineKeyboardMarkup:
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ classes.db –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
    conn_classes = sqlite3.connect("instance/classes.db", isolation_level=None)
    cursor_classes = conn_classes.cursor()
    cursor_classes.execute("SELECT id, class_name FROM class_schedule")
    class_buttons = cursor_classes.fetchall()
    conn_classes.close()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–ª–∞—Å—Å–æ–≤
    for class_id, class_name in class_buttons:
        builder.button(
            text=class_name,  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            callback_data=f"select_class_{class_name}"  # –î–∞–Ω–Ω—ã–µ –∫–æ–ª–±—ç–∫–∞
        )

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
    builder.button(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="exit_to_role")

    builder.adjust(1)  # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª–∏—Å—å –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ

    return builder.as_markup()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

def generate_sendmessclass() -> InlineKeyboardMarkup:
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ classes.db –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
    conn_classes = sqlite3.connect("instance/classes.db", isolation_level=None)
    cursor_classes = conn_classes.cursor()
    cursor_classes.execute("SELECT id, class_name FROM class_schedule")
    class_buttons = cursor_classes.fetchall()
    conn_classes.close()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–ª–∞—Å—Å–æ–≤
    for class_id, class_name in class_buttons:
        builder.button(
            text=class_name,  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            callback_data=f"view_{class_name}"  # –î–∞–Ω–Ω—ã–µ –∫–æ–ª–±—ç–∫–∞
        )

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
    builder.button(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="exit_to_role")

    builder.adjust(1)  # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª–∏—Å—å –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ

    return builder.as_markup()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã




def class_menu():
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ WebAppInfo
    web_app_info = WebAppInfo(url='https://webappsch-hoper.amvera.io/')

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=web_app_info))
    return builder.as_markup(resize_keyboard=True)

    
def choose_view() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º —É—á–µ–Ω–∏–∫–∞–º.", callback_data="all_send"))
    builder.add(InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∞—Å—Å—É.", callback_data="send_choose"))
    builder.adjust(1)
    return builder.as_markup()    